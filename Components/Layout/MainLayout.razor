@using MudBlazor
@inherits LayoutComponentBase

<MudThemeProvider Theme="_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>

    <MudAppBar Elevation="1" Dense="true">

        <!-- Drawer Toggle -->
        <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Inherit"
                       Edge="Edge.Start"
                       OnClick="@(e => DrawerToggle())"
                       Size="Size.Medium" />

        <!--HIER TITEL-->
        Vocabulary Trainer

        <MudSpacer />

        <!-- (optional) LoginDisplay -->
        <div class="d-none d-sm-flex">
            @* <LoginDisplay /> *@
        </div>

        <!-- User Menu -->
        <MudMenu Icon="@Icons.Material.Filled.AccountCircle"
                 Class="d-flex d-sm-none"
                 Color="Color.Inherit"
                 Dense="true">
            <div class="pa-3">
                @* <LoginDisplay /> *@
            </div>
        </MudMenu>

        <!-- Dark/Light Toggle -->
        <MudIconButton Icon="@DarkLightModeButtonIcon"
                       Color="Color.Inherit"
                       OnClick="@(e => DarkModeToggle())"
                       Size="Size.Medium" />

    </MudAppBar>

    <!-- Left Drawer -->
    <MudDrawer @bind-Open="_drawerOpen"
               ClipMode="DrawerClipMode.Always"
               Elevation="2"
               Variant="DrawerVariant.Responsive"
               Breakpoint="Breakpoint.Lg"
               Id="nav-drawer">
        <NavMenu /> 
    </MudDrawer>

    <!-- Main content -->
    <MudMainContent Class="pt-16 pa-2 pa-sm-4 mt-md-12">
        @Body
    </MudMainContent>

</MudLayout>

<!-- Fallback-Error UI (wie in deinem Screenshot) -->
<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <span class="dismiss">✕</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new MudTheme
            {
                PaletteLight = _lightPalette,
                PaletteDark = _darkPalette,
                LayoutProperties = new LayoutProperties()
            };
    }

    private void DrawerToggle() => _drawerOpen = !_drawerOpen;
    private void DarkModeToggle() => _isDarkMode = !_isDarkMode;

    private readonly PaletteLight _lightPalette = new()
        {
            Black = "#110e2d",
            AppbarText = "#424242",
            AppbarBackground = "rgba(255,255,255,0.8)",
            DrawerBackground = "#ffffff",
            GrayLight = "#e8e8e8",
            GrayLighter = "#f9f9f9",
        };

    private readonly PaletteDark _darkPalette = new()
        {
            Primary = "#7e6fff",
            Info = "#4a86ff",
            Success = "#3dcb6c",
            Warning = "#ffb545",
            Error = "#ff3f5f",
            Background = "#1a1a27",
            Surface = "#1E1E2d",
            BackgroundGray = "#151521",
            AppbarBackground = "rgba(26,26,39,0.8)",
            AppbarText = "#92929f",
            DrawerBackground = "#1A1A27",
            DrawerText = "#92929f",
            DrawerIcon = "#92929f",
            ActionDefault = "#74718e",
            ActionDisabled = "#9999994d",
            ActionDisabledBackground = "#605f6d4d",
            GrayLight = "#2a2833",
            GrayLighter = "#1e1e2d",
            TextPrimary = "#b2b0bf",
            TextSecondary = "#92929f",
            TextDisabled = "#ffffff33",
            LinesDefault = "#33323e",
            TableLines = "#33323e",
            Divider = "#292838",
            OverlayLight = "#1e1e2d80"
        };

    public string DarkLightModeButtonIcon => _isDarkMode
        ? Icons.Material.Rounded.WbSunny
        : Icons.Material.Outlined.DarkMode;
}
